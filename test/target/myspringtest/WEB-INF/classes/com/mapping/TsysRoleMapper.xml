<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.TsysRoleMapper" >
  <resultMap id="BaseResultMap" type="com.model.TsysRole" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="is_del" property="isDel" jdbcType="INTEGER" />
    <result column="menu_auth" property="menuAuth" jdbcType="VARCHAR" />
    <result column="role_desc" property="roleDesc" jdbcType="VARCHAR" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.model.TsysRole" extends="BaseResultMap" >
    <result column="action_auth" property="actionAuth" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, is_del, menu_auth, role_desc, role_name, update_time
  </sql>
  <sql id="Blob_Column_List" >
    action_auth
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_sys_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_sys_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.model.TsysRole" >
    insert into t_sys_role (id, is_del, menu_auth, 
      role_desc, role_name, update_time, 
      action_auth)
    values (#{id,jdbcType=BIGINT}, #{isDel,jdbcType=INTEGER}, #{menuAuth,jdbcType=VARCHAR}, 
      #{roleDesc,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{actionAuth,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.model.TsysRole" >
    insert into t_sys_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
      <if test="menuAuth != null" >
        menu_auth,
      </if>
      <if test="roleDesc != null" >
        role_desc,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="actionAuth != null" >
        action_auth,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="menuAuth != null" >
        #{menuAuth,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="actionAuth != null" >
        #{actionAuth,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.model.TsysRoleExample" resultType="java.lang.Integer" >
    select count(*) from t_sys_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.TsysRole" >
    update t_sys_role
    <set >
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="menuAuth != null" >
        menu_auth = #{menuAuth,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        role_desc = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="actionAuth != null" >
        action_auth = #{actionAuth,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.model.TsysRole" >
    update t_sys_role
    set is_del = #{isDel,jdbcType=INTEGER},
      menu_auth = #{menuAuth,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      action_auth = #{actionAuth,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.TsysRole" >
    update t_sys_role
    set is_del = #{isDel,jdbcType=INTEGER},
      menu_auth = #{menuAuth,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>